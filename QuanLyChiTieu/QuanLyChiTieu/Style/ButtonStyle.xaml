<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:viewmodel="clr-namespace:QuanLyChiTieu.ViewModel">

    <!--Signup button-->
    <Style x:Key="buttonSignUp" TargetType="Button">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25"
                            BorderBrush="White" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF4E3D82"/>
            </Trigger>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="{StaticResource darkButtonPress}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--SignIn button-->
    <Style x:Key="buttonSignIn" TargetType="Button">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="{StaticResource darkBackground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25"
                            BorderBrush="White" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource darkButtonOver}"/>
            </Trigger>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="{StaticResource darkButtonPress}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Text box-->
    <Style x:Key="usernameTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="UltraLight"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Margin" Value="10, 0, 0, 0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource darkFont}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="False"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden"
                              Margin="-2 0"/>
                            <Label x:Name="InitText"
                                   Content="{TemplateBinding Tag}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Visibility="Collapsed"
                                   Foreground="{StaticResource greyFont}"
                                   Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="InitText" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--password box-->
    <Style x:Key="passBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="UltraLight"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Margin" Value="10, 0, 0, 0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource darkFont}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!--Menu Button Style-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5, 0, 0, 5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="4, 0, 0, 0">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0, 0, 0, 5"/>
                <Setter Property="Background" Value="{StaticResource panelHover}"/>
                <Setter Property="BorderBrush" Value="{StaticResource lightFont}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0, 0, 0, 5"/>
                <Setter Property="Background" Value="{StaticResource panelActivate}"/>
                <Setter Property="BorderBrush" Value="{StaticResource lightFont}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu Button Icon-->
    <Style x:Key="menuIconButton" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Margin" Value="35, 0, 20, 0"/>
    </Style>

    <!--Menu Button Text Style-->
    <Style x:Key="menuIconText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Window Control Button Style-->
    <Style x:Key="winCtrButton" TargetType="Button">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource middleFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource lightBackgroundHightlight}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Window Control Button Icon-->
    <Style x:Key="winCtrIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="Width" Value="9"/>
    </Style>

    <!--Set Type Button-->
    <Style x:Key="typeButton" TargetType="RadioButton">
        <Setter Property="Height" Value="70"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource lightPanelHover}"/>
                <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource lightPanelActivate}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Set Type Icon-->
    <Style x:Key="typeIconButton" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Margin" Value="30, 0, 20, 0"/>
    </Style>

    <!--Set Type Text Type-->
    <Style x:Key="typeIconText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--Set Mixed button-->
    <Style x:Key="mixedButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource darkFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="12, 6, 12, 6"/>
        <Setter Property="BorderBrush" Value="{StaticResource darkButtonBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="lightButtonBorder"
                        CornerRadius="5"
                        Background="{StaticResource lightButtonBackground}"
                        Width="{TemplateBinding Width}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">

                        <ContentPresenter
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lightButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource darkButtonOver}"/>
                            <Setter TargetName="lightButtonBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource darkButtonOver}"/>
                            <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="lightButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource darkButtonPress}"/>
                            <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Set Dark button-->
    <Style x:Key="darkButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="12, 6, 12, 6"/>
        <Setter Property="BorderBrush" Value="{StaticResource lightButtonBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="lightButtonBorder"
                        CornerRadius="5"
                        Background="{StaticResource darkButtonBackground}"
                        Width="{TemplateBinding Width}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">

                        <ContentPresenter
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lightButtonBorder"
                                Property="Background"
                                Value="{StaticResource darkButtonOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="lightButtonBorder"
                                Property="Background"
                                Value="{StaticResource darkButtonPress}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Set Light button-->
    <Style x:Key="lightButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource darkFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="12, 6, 12, 6"/>
        <Setter Property="BorderBrush" Value="{StaticResource lightButtonBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="lightButtonBorder"
                        CornerRadius="5"
                        Background="{StaticResource lightButtonBackground}"
                        Width="{TemplateBinding Width}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">

                        <ContentPresenter
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lightButtonBorder"
                            Property="Background"
                            Value="{StaticResource lightButtonOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="lightButtonBorder"
                            Property="Background"
                            Value="{StaticResource lightButtonPress}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Set Green button-->
    <Style x:Key="greenButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="6 4"/>
        <Setter Property="BorderBrush" Value="{StaticResource blurGreen}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                    x:Name="lightButtonBorder"
                    CornerRadius="5"
                    Background="{StaticResource greenUI}"
                    Width="{TemplateBinding Width}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">

                        <ContentPresenter
                        Focusable="False"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Margin="{TemplateBinding Padding}"
                        RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lightButtonBorder"
                            Property="Background"
                            Value="{StaticResource lighterGreen}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="lightButtonBorder"
                            Property="Background"
                            Value="{StaticResource darkerGreen}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Set Red button-->
    <Style x:Key="redButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource lightFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="6 4"/>
        <Setter Property="BorderBrush" Value="{StaticResource blurRed}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="lightButtonBorder"
                        CornerRadius="5"
                        Background="{StaticResource redUI}"
                        Width="{TemplateBinding Width}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">

                        <ContentPresenter
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="lightButtonBorder"
                            Property="Background"
                            Value="{StaticResource lighterRed}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="lightButtonBorder"
                            Property="Background"
                            Value="{StaticResource darkerRed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Text button-->
    <Style x:Key="textButton" TargetType="Button">
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource darkBackground}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                    x:Name="textButtonBorder"
                    Background="{TemplateBinding Background}">
                        <TextBlock>
                        <Underline>
                            <ContentPresenter/>
                        </Underline>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="textButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource lightButtonOver}"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="textButtonBorder"
                                    Property="Background"
                                    Value="{StaticResource lightButtonPress}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Sort Button Style-->
    <Style x:Key="sortButton" TargetType="RadioButton">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="{StaticResource lightBackground}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource lightBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource darkFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource lightButtonOver}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource lightButtonPress}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Sort Button Icon-->
    <Style x:Key="sortButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
    </Style>

</ResourceDictionary> 